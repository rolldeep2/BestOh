<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
        http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- root-context.xml: 스프링 프레임워크에서 생성하고 관리하는 자바 객체(bean)들을 설정.
        DataSource, SqlSession, Service 계층, Persistence 계층 Java bean.
        스프링 프레임워크에서 Java bean들을 생성하고 관리하는 목적: 의존성 주입을 위해서.
        @Autowired 또는 @Inject 어노테이션이 설정된 변수에 자동으로 주입됨. 
    -->
    
    <!-- Oracle DataSource(DBCP: Database Connection Pool) 객체(bean) 설정 -->
    <!-- DataSource ds = new DriverManagerDataSource();
         ds.setDriverClassName("oracle.jdbc.OracleDriver"); -->
    <bean id="ds"
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="oracle.jdbc.OracleDriver" />
        <property name="url" value="jdbc:oracle:thin:@itwillteam4.cxak2krrtbd5.us-east-1.rds.amazonaws.com:1521:orcl" />
        <property name="username" value="itwillteam4" />
        <property name="password" value="itwillteam4" />
    </bean>
    
    <!-- MyBatis 프레임워크에서 사용할 SqlSessionFactory 객체(SqlSession을 생성하기 위한 객체) 설정 -->
    <!-- SqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBean(); 
         sqlSessionFactory.setDataSource(ds); -->
    <bean id="sqlSessionFactory"
        class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="ds" />
        <property name="configLocation" value="classpath:/mybatis-config.xml" />
        <property name="mapperLocations" value="classpath:/mapper/*.xml" />
    </bean>
    
    <!-- SqlSession 객체(SQL 문장 실행, 결과 처리를 담당) 설정 -->
    <!-- SqlSession sqlSession = new SqlSessionTemplate(sqlSessionFactory); -->
    <bean id="sqlSession"
        class="org.mybatis.spring.SqlSessionTemplate"
        destroy-method="clearCache">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
    </bean>
    
    <context:component-scan base-package="edu.spring.team4.persistence"></context:component-scan>
    <context:component-scan base-package="edu.spring.team4.service"></context:component-scan>
    
    <!-- 매퍼(mapper) 객체를 생성, 관리 -->
    <mybatis-spring:scan base-package="edu.spring.team4.mapper"/>
    
    <!-- 회원가입 메일 인증 -->
	<bean id="mailSender"	class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" /><!-- 465 or 25 -->
		<property name="username" value="bestbookoh@gmail.com" />
		<property name="password" value="bookoh4444" />
		<property name="defaultEncoding" value="utf-8" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.debug">true</prop>
				<prop key="mail.smtp.ssl.trust">smtp.gmail.com</prop>
				<prop key="mail.smtp.ssl.protocols">TLSv1.2</prop>
			</props>
		</property>
	</bean>
    
</beans>